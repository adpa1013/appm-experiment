// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: query.sql

package appointment_experiment

import (
	"context"
)

const getAppointmentsBySeries = `-- name: GetAppointmentsBySeries :many
SELECT ap.kEdAppointmentId, ap.strName, ap.dtmBegin, ap.dtmEnd
FROM tblEdAppointment ap
WHERE ap.kEdAppointmentId IN (
    SELECT aseries.kEdAppointmentId
    FROM tblEdAppointmentSeries aseries
    WHERE aseries.kEdAppointmentId = $1
)
`

func (q *Queries) GetAppointmentsBySeries(ctx context.Context, kedappointmentid int32) ([]Tbledappointment, error) {
	rows, err := q.db.Query(ctx, getAppointmentsBySeries, kedappointmentid)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []Tbledappointment
	for rows.Next() {
		var i Tbledappointment
		if err := rows.Scan(
			&i.Kedappointmentid,
			&i.Strname,
			&i.Dtmbegin,
			&i.Dtmend,
		); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
